import _JSXStyle from "styled-jsx/style";
import { colors } from '@dhis2/ui-constants';
import PropTypes from 'prop-types';
import React, { useMemo } from 'react';
import { CalendarTable, CalendarTableProps } from './calendar-table.js';
import { NavigationContainer, NavigationContainerProps } from './navigation-container.js';
const wrapperBorderColor = colors.grey300;
const backgroundColor = 'none';
export const CalendarContainer = /*#__PURE__*/React.memo(function CalendarContainer(_ref) {
  let {
    date,
    width = '240px',
    cellSize = '32px',
    calendarWeekDays,
    weekDayLabels,
    currMonth,
    currYear,
    nextMonth,
    nextYear,
    prevMonth,
    prevYear,
    navigateToYear,
    navigateToMonth,
    months,
    years,
    languageDirection,
    calendarRef
  } = _ref;
  const navigationProps = useMemo(() => {
    return {
      currMonth,
      currYear,
      nextMonth,
      nextYear,
      prevMonth,
      prevYear,
      languageDirection,
      navigateToYear,
      navigateToMonth,
      months,
      years
    };
  }, [currMonth, currYear, languageDirection, nextMonth, nextYear, prevMonth, prevYear, navigateToYear, navigateToMonth, months, years]);
  return /*#__PURE__*/React.createElement("div", {
    className: _JSXStyle.dynamic([["2823859047", [backgroundColor, wrapperBorderColor, width]]])
  }, /*#__PURE__*/React.createElement("div", {
    dir: languageDirection,
    "data-test": "calendar",
    className: _JSXStyle.dynamic([["2823859047", [backgroundColor, wrapperBorderColor, width]]]) + " " + "calendar-wrapper"
  }, /*#__PURE__*/React.createElement("div", {
    ref: calendarRef,
    className: _JSXStyle.dynamic([["2823859047", [backgroundColor, wrapperBorderColor, width]]])
  }, /*#__PURE__*/React.createElement(NavigationContainer, navigationProps), /*#__PURE__*/React.createElement(CalendarTable, {
    selectedDate: date,
    calendarWeekDays: calendarWeekDays,
    weekDayLabels: weekDayLabels,
    cellSize: cellSize,
    width: width
  }))), /*#__PURE__*/React.createElement(_JSXStyle, {
    id: "2823859047",
    dynamic: [backgroundColor, wrapperBorderColor, width]
  }, [`.calendar-wrapper.__jsx-style-dynamic-selector{font-family:Roboto,sans-serif;font-weight:400;font-size:14px;background-color:${backgroundColor};display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;border:1px solid ${wrapperBorderColor};border-radius:3px;min-width:${width};width:-webkit-max-content;width:-moz-max-content;width:max-content;box-shadow:0px 4px 6px -2px #2129340d;box-shadow:0px 10px 15px -3px #2129341a;}`]));
});
CalendarContainer.propTypes = {
  /** the currently selected date using an iso-like format YYYY-MM-DD, in the calendar system provided (not iso8601) */
  date: PropTypes.string,
  ...CalendarTableProps,
  ...NavigationContainerProps
};