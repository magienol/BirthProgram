"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccessAdd = void 0;
var _style = _interopRequireDefault(require("styled-jsx/style"));
var _appRuntime = require("@dhis2/app-runtime");
var _uiConstants = require("@dhis2/ui-constants");
var _button = require("@dhis2-ui/button");
var _select = require("@dhis2-ui/select");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _index = require("../autocomplete/index.js");
var _constants = require("../constants.js");
var _index2 = require("../fetching-context/index.js");
var _index3 = _interopRequireDefault(require("../locales/index.js"));
var _index4 = require("../text/index.js");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const AccessAdd = _ref => {
  let {
    onAdd,
    dataSharing
  } = _ref;
  const isFetching = (0, _react.useContext)(_index2.FetchingContext);
  const [entity, setEntity] = (0, _react.useState)(null);
  const [dataAccess, setDataAccess] = (0, _react.useState)('');
  const [metadataAccess, setMetadataAccess] = (0, _react.useState)('');
  const {
    isDisconnected: offline
  } = (0, _appRuntime.useDhis2ConnectionStatus)();
  const onSubmit = e => {
    e.preventDefault();
    onAdd({
      type: entity.type,
      id: entity.id,
      name: entity.displayName || entity.name,
      access: {
        data: dataAccess,
        metadata: metadataAccess
      }
    });
    setEntity(null);
    setDataAccess('');
    setMetadataAccess('');
  };
  const accessOptionsMetadata = [{
    value: _constants.ACCESS_VIEW_ONLY,
    label: _index3.default.t('View only')
  }, {
    value: _constants.ACCESS_VIEW_AND_EDIT,
    label: _index3.default.t('View and edit')
  }];
  const accessOptionsData = [...accessOptionsMetadata, {
    value: _constants.ACCESS_NONE,
    label: _index3.default.t('No access')
  }];
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_index4.Title, null, _index3.default.t('Give access to a user or group')), /*#__PURE__*/_react.default.createElement("form", {
    onSubmit: onSubmit,
    className: _style.default.dynamic([["3476690250", [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]]])
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3476690250", [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]]]) + " " + ((dataSharing ? 'startWrapperData' : 'startWrapperMetadata') || "")
  }, /*#__PURE__*/_react.default.createElement(_index.SharingAutocomplete, {
    selected: (entity === null || entity === void 0 ? void 0 : entity.displayName) || (entity === null || entity === void 0 ? void 0 : entity.name),
    onSelection: setEntity
  })), /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3476690250", [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]]]) + " " + ((dataSharing ? 'endWrapper endWrapperData' : 'endWrapper endWrapperMetadata') || "")
  }, dataSharing && /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3476690250", [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]]]) + " " + "select-wrapper"
  }, /*#__PURE__*/_react.default.createElement(_select.SingleSelectField, {
    label: _index3.default.t('Data access level'),
    placeholder: _index3.default.t('Choose a level'),
    disabled: offline,
    selected: dataAccess,
    helpText: offline ? _index3.default.t('Not available offline') : '',
    onChange: _ref2 => {
      let {
        selected
      } = _ref2;
      return setDataAccess(selected);
    }
  }, accessOptionsData.map(_ref3 => {
    let {
      value,
      label
    } = _ref3;
    return /*#__PURE__*/_react.default.createElement(_select.SingleSelectOption, {
      key: value,
      label: label,
      value: value,
      active: value === dataAccess
    });
  }))), /*#__PURE__*/_react.default.createElement("div", {
    className: _style.default.dynamic([["3476690250", [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]]]) + " " + "select-wrapper"
  }, /*#__PURE__*/_react.default.createElement(_select.SingleSelectField, {
    label: dataSharing ? _index3.default.t('Metadata access level') : _index3.default.t('Access level'),
    placeholder: _index3.default.t('Choose a level'),
    disabled: offline,
    selected: metadataAccess,
    helpText: offline ? _index3.default.t('Not available offline') : '',
    onChange: _ref4 => {
      let {
        selected
      } = _ref4;
      return setMetadataAccess(selected);
    }
  }, (dataSharing ? accessOptionsData : accessOptionsMetadata).map(_ref5 => {
    let {
      value,
      label
    } = _ref5;
    return /*#__PURE__*/_react.default.createElement(_select.SingleSelectOption, {
      key: value,
      label: label,
      value: value,
      active: value === metadataAccess
    });
  }))), /*#__PURE__*/_react.default.createElement(_button.Button, {
    type: "submit",
    disabled: offline || isFetching || !entity || dataSharing && !dataAccess || !metadataAccess || dataAccess === _constants.ACCESS_NONE && metadataAccess === _constants.ACCESS_NONE
  }, _index3.default.t('Give access')))), /*#__PURE__*/_react.default.createElement(_style.default, {
    id: "3476690250",
    dynamic: [_uiConstants.colors.grey100, _uiConstants.colors.grey900, _uiConstants.spacers.dp8]
  }, [`form.__jsx-style-dynamic-selector{background-color:${_uiConstants.colors.grey100};color:${_uiConstants.colors.grey900};margin-bottom:21px;padding:8px 12px;border-radius:5px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-end;-webkit-box-align:flex-end;-ms-flex-align:flex-end;align-items:flex-end;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}`, ".select-wrapper.__jsx-style-dynamic-selector{-webkit-flex:1;-ms-flex:1;flex:1;}", ".startWrapperData.__jsx-style-dynamic-selector{width:35%;}", ".startWrapperMetadata.__jsx-style-dynamic-selector{width:55%;}", `.endWrapper.__jsx-style-dynamic-selector{margin-inline-start:8px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:flex-end;-webkit-box-align:flex-end;-ms-flex-align:flex-end;align-items:flex-end;gap:${_uiConstants.spacers.dp8};}`, ".endWrapperMetadata.__jsx-style-dynamic-selector{width:45%;}", ".endWrapperData.__jsx-style-dynamic-selector{width:65%;}"]));
};
exports.AccessAdd = AccessAdd;
AccessAdd.propTypes = {
  onAdd: _propTypes.default.func.isRequired,
  dataSharing: _propTypes.default.bool
};