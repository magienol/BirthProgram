import React, { useState } from 'react';
import { AlertsContext } from './AlertsContext';
import { AlertsManagerContext } from './AlertsManagerContext';
import { makeAlertsManager } from './makeAlertsManager';
export const AlertsProvider = _ref => {
  let {
    plugin,
    parentAlertsAdd,
    showAlertsInPlugin,
    children
  } = _ref;
  const [alerts, setAlerts] = useState([]);
  const [alertsManager] = useState(() => makeAlertsManager(setAlerts, plugin));
  return /*#__PURE__*/React.createElement(AlertsManagerContext.Provider, {
    value: {
      ...alertsManager,
      parentAlertsAdd,
      showAlertsInPlugin
    }
  }, /*#__PURE__*/React.createElement(AlertsContext.Provider, {
    value: alerts
  }, children));
};