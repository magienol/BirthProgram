"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _pwa = require("@dhis2/pwa");
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireDefault(require("react"));
var _AppWrapper = require("./components/AppWrapper.js");
var _ErrorBoundary = require("./components/ErrorBoundary.js");
var _LoginAppWrapper = require("./components/LoginAppWrapper.js");
var _OfflineInterfaceContext = require("./components/OfflineInterfaceContext.js");
var _PWALoadingBoundary = require("./components/PWALoadingBoundary.js");
var _ServerVersionProvider = require("./components/ServerVersionProvider.js");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
const AppAdapter = _ref => {
  let {
    appName,
    appVersion,
    url,
    apiVersion,
    direction,
    pwaEnabled,
    plugin,
    parentAlertsAdd,
    showAlertsInPlugin,
    onPluginError,
    clearPluginError,
    loginApp,
    children
  } = _ref;
  if (loginApp) {
    return /*#__PURE__*/_react.default.createElement(_ErrorBoundary.ErrorBoundary, {
      fullscreen: true,
      onRetry: () => {
        window.location.reload();
      },
      plugin: false,
      loginApp: true,
      baseURL: url
    }, /*#__PURE__*/_react.default.createElement(_ServerVersionProvider.ServerVersionProvider, {
      appName: appName,
      appVersion: appVersion,
      url: url,
      apiVersion: apiVersion,
      pwaEnabled: pwaEnabled,
      loginApp: loginApp,
      plugin: false
    }, /*#__PURE__*/_react.default.createElement(_LoginAppWrapper.LoginAppWrapper, null, children)));
  }
  return /*#__PURE__*/_react.default.createElement(_ErrorBoundary.ErrorBoundary, {
    plugin: plugin,
    fullscreen: true,
    onRetry: _pwa.checkForSWUpdateAndReload
  }, /*#__PURE__*/_react.default.createElement(_OfflineInterfaceContext.OfflineInterfaceProvider, null, /*#__PURE__*/_react.default.createElement(_PWALoadingBoundary.PWALoadingBoundary, null, /*#__PURE__*/_react.default.createElement(_ServerVersionProvider.ServerVersionProvider, {
    appName: appName,
    appVersion: appVersion,
    url: url,
    apiVersion: apiVersion,
    pwaEnabled: pwaEnabled,
    plugin: plugin,
    parentAlertsAdd: parentAlertsAdd,
    showAlertsInPlugin: showAlertsInPlugin
  }, /*#__PURE__*/_react.default.createElement(_AppWrapper.AppWrapper, {
    plugin: plugin,
    onPluginError: onPluginError,
    clearPluginError: clearPluginError,
    direction: direction
  }, children)))));
};
AppAdapter.propTypes = {
  appName: _propTypes.default.string.isRequired,
  appVersion: _propTypes.default.string.isRequired,
  apiVersion: _propTypes.default.number,
  children: _propTypes.default.element,
  clearPluginError: _propTypes.default.func,
  direction: _propTypes.default.oneOf(['ltr', 'rtl', 'auto']),
  loginApp: _propTypes.default.bool,
  parentAlertsAdd: _propTypes.default.func,
  plugin: _propTypes.default.bool,
  pwaEnabled: _propTypes.default.bool,
  showAlertsInPlugin: _propTypes.default.bool,
  url: _propTypes.default.string,
  onPluginError: _propTypes.default.func
};
var _default = exports.default = AppAdapter;