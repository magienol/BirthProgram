import { Temporal } from '@js-temporal/polyfill';
import { PickerOptions, PickerOptionsWithResolvedCalendar, SupportedCalendar } from '../types';
declare type LocaliseDateLabel = (selectedDateZdt: Temporal.ZonedDateTime | Temporal.PlainDate, localeOptions: {
    calendar: SupportedCalendar;
    locale: string;
}, options?: {
    dateStyle: 'full' | 'long' | 'medium' | 'short' | undefined;
}) => string;
export declare const localiseWeekDayLabel: (zdt: Temporal.ZonedDateTime, localeOptions: PickerOptionsWithResolvedCalendar) => string;
export declare const localiseYear: (zdt: Temporal.ZonedDateTime, localeOptions: PickerOptions, format: Intl.DateTimeFormatOptions) => string | number;
declare const localisationHelpers: {
    localiseYear: (zdt: Temporal.ZonedDateTime, localeOptions: PickerOptions, format: Intl.DateTimeFormatOptions) => string | number;
    localiseDateLabel: LocaliseDateLabel;
    localiseWeekLabel: (zdt: Temporal.ZonedDateTime, localeOptions: PickerOptions) => string | number;
    localiseMonth: (zdt: Temporal.ZonedDateTime | Temporal.PlainYearMonth | Temporal.PlainDate | Temporal.PlainDateLike, localeOptions: PickerOptions, format: Intl.DateTimeFormatOptions) => string | undefined;
    localiseWeekDayLabel: (zdt: Temporal.ZonedDateTime, localeOptions: PickerOptionsWithResolvedCalendar) => string;
};
export default localisationHelpers;
