import { Temporal } from '@js-temporal/polyfill';
import { Dispatch, SetStateAction } from 'react';
import { PickerOptionsWithResolvedCalendar } from '../../types';
export declare type UseNavigationReturnType = {
    prevYear: {
        label: string | number;
        navigateTo: () => void;
    };
    currYear: {
        label: string | number;
        value: string | number;
    };
    nextYear: {
        label: string | number;
        navigateTo: () => void;
    };
    prevMonth: {
        label: string | undefined;
        navigateTo: () => void;
    };
    currMonth: {
        label: string | undefined;
    };
    nextMonth: {
        label: string | undefined;
        navigateTo: () => void;
    };
    months: Array<{
        label: string;
        value: number;
    }>;
    years: Array<{
        label: string;
        value: number;
    }>;
    navigateToMonth: (month: number) => void;
    navigateToYear: (year: number) => void;
};
declare type UseNavigationHook = (firstZdtOfVisibleMonth: Temporal.ZonedDateTime, setFirstZdtOfVisibleMonth: Dispatch<SetStateAction<Temporal.ZonedDateTime>>, localeOptions: PickerOptionsWithResolvedCalendar) => UseNavigationReturnType;
/**
 * internal hook used by useDatePicker to build the navigation of the calendar
 *
 * @param options
 * @returns
 */
export declare const useNavigation: UseNavigationHook;
export {};
